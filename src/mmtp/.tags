!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	mmt.h	/^	u_int8_t A:1;$/;"	m	struct:signal_header_s
ACCESS	mkdir.cc	10;"	d	file:
Asset_info	mmt.h	/^typedef struct Asset_info$/;"	s
BACKLOG	mmt.cc	10;"	d	file:
BACKLOG	server.cc	15;"	d	file:
BUFF_LEN	client.cc	74;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -I..\/..\/..\/ -D_TEST$/;"	m
CLOSESOCKET	client.cc	75;"	d	file:
CODE_RATE	fec.h	69;"	d
ClearList	DList.cc	/^void ClearList(DList *plist)$/;"	f
CreatDir	mkdir.cc	/^int CreatDir(char *pDir)$/;"	f
DEFAULT_K	fec.h	68;"	d
DEST_IP	fec.h	77;"	d
DEST_PORT	fec.h	78;"	d
DList	DList.h	/^}DList;$/;"	t	typeref:struct:__anon4
DelFirst	DList.cc	/^PNode DelFirst(DList *plist)$/;"	f
DelFirst2	DList.cc	/^PNode DelFirst2(DList *plist)$/;"	f
DestroyList	DList.cc	/^void DestroyList(DList *plist)$/;"	f
FEC_type	mmt.h	/^    u_int8_t FEC_type:2;$/;"	m	struct:MMT_packet_header_s
FT	mmt.h	/^	u_int8_t FT:4;\/\/mpu_fragment_type$/;"	m	struct:MPU_packet_header_s
Fragment_metadata_s	mmt.h	/^typedef struct Fragment_metadata_s \/\/Byte$/;"	s
FreeNode	DList.cc	/^void FreeNode(PNode p)$/;"	f
GetHead	DList.cc	/^Position GetHead(DList *plist)$/;"	f
GetItem	DList.cc	/^unsigned char* GetItem(Position p)$/;"	f
GetNext	DList.cc	/^Position GetNext(Position p)$/;"	f
GetPrevious	DList.cc	/^Position GetPrevious(Position p)$/;"	f
GetSize	DList.cc	/^int GetSize(DList *plist)$/;"	f
GetTail	DList.cc	/^Position GetTail(DList *plist)$/;"	f
H	mmt.h	/^	u_int8_t H:1;$/;"	m	struct:signal_header_s
ID_mapping_URL	mmt.h	/^	ID_mapping_URL_t *ID_mapping_URL;$/;"	m	union:Identifier_mapping_byte_s
ID_mapping_URL_s	mmt.h	/^typedef struct ID_mapping_URL_s$/;"	s
ID_mapping_URL_t	mmt.h	/^}ID_mapping_URL_t,*pID_mapping_URL_t;$/;"	t	typeref:struct:ID_mapping_URL_s
INI_READ_SIGNED	ini.cc	499;"	d	file:
INI_READ_UNSIGNED	ini.cc	511;"	d	file:
INVALID_SOCKET	fec.h	57;"	d
IP_BUFF_LEN	mmt.h	25;"	d
IPh_BUFF_LEN	mmt.h	24;"	d
Identifier_mapping	mmt.h	/^	Identifier_mapping_t *Identifier_mapping;$/;"	m	struct:MP_table_asset_s
Identifier_mapping_byte_s	mmt.h	/^typedef union Identifier_mapping_byte_s \/\/4Byte$/;"	u
Identifier_mapping_byte_t	mmt.h	/^}Identifier_mapping_byte_t, *pIdentifier_mapping_byte_t;$/;"	t	typeref:union:Identifier_mapping_byte_s
Identifier_mapping_s	mmt.h	/^typedef struct Identifier_mapping_s$/;"	s
Identifier_mapping_t	mmt.h	/^}Identifier_mapping_t, *pIdentifier_mapping_t;$/;"	t	typeref:struct:Identifier_mapping_s
InitList	DList.cc	/^DList * InitList()$/;"	f
InsAfter	DList.cc	/^PNode InsAfter(DList *plist,Position p,PNode s)$/;"	f
InsBefore	DList.cc	/^PNode InsBefore(DList *plist,Position p,PNode s)$/;"	f
InsFirst	DList.cc	/^PNode InsFirst(DList *plist,PNode pnode)$/;"	f
IsEmpty	DList.cc	/^int IsEmpty(DList *plist)$/;"	f
LDFLAGS	Makefile	/^LDFLAGS = -L ..\/openfec\/bin\/Release -lopenfec -lm -lpthread$/;"	m
LEN	mmt.h	/^	u_int16_t LEN;$/;"	m	struct:SMT_packet_header_s
LOSS_RATE	fec.h	70;"	d
ListTraverse	DList.cc	/^void ListTraverse(DList *plist,void (*visit)(unsigned char*))$/;"	f
LocatePos	DList.cc	/^PNode LocatePos(DList *plist,int i)$/;"	f
MAX_ASSET_NUM	mmtp.h	12;"	d
MAX_ATTR_LEN	mmt.h	89;"	d
MAX_ID_NUM	mmtp.h	13;"	d
MAX_PATH	ini.cc	20;"	d	file:
MAX_PATH	mmtp.h	16;"	d
MAX_PATH_LEN	mmt.h	90;"	d
MAX_SEND_ASSET_NUM	mmt.h	83;"	d
MCAST_ADDR	client.cc	/^char MCAST_ADDR[64];$/;"	v
MCAST_PORT	client.cc	/^int MCAST_PORT;$/;"	v
MFU_non_time_packet_header_s	mmt.h	/^typedef struct MFU_non_time_packet_header_s \/\/4Byte$/;"	s
MFU_nt_BUFF_LEN	mmt.h	40;"	d
MFU_s	mmt.h	/^typedef struct MFU_s \/\/Byte$/;"	s
MFU_t_BUFF_LEN	mmt.h	38;"	d
MFU_time_packet_header_s	mmt.h	/^typedef struct MFU_time_packet_header_s \/\/14Byte$/;"	s
MFUh_nt_BUFF_LEN	mmt.h	39;"	d
MFUh_t_BUFF_LEN	mmt.h	37;"	d
MKDIR	mkdir.cc	11;"	d	file:
MMTP_BUFF_LEN	mmt.h	31;"	d
MMTP_CACHE	mmtp.h	11;"	d
MMTPh_BUFF_LEN	mmt.h	30;"	d
MMT_config	mmt.h	/^typedef struct MMT_config \/\/16Byte$/;"	s
MMT_packet_header_extension_header_s	mmt.h	/^typedef struct MMT_packet_header_extension_header_s\/\/4Byte$/;"	s
MMT_packet_header_s	mmt.h	/^typedef struct MMT_packet_header_s \/\/16Byte$/;"	s
MP4_FOURCC	mmt.h	17;"	d
MPIT_descriptor	mmt.h	/^	MPIT_descriptors_t *MPIT_descriptor;$/;"	m	struct:mpi_table_s
MPIT_descriptors_byte	mmt.h	/^	unsigned char *MPIT_descriptors_byte;$/;"	m	struct:MPIT_descriptors_s
MPIT_descriptors_s	mmt.h	/^typedef struct MPIT_descriptors_s$/;"	s
MPIT_descriptors_t	mmt.h	/^}MPIT_descriptors_t, *pMPIT_descriptors_t;$/;"	t	typeref:struct:MPIT_descriptors_s
MPUList	Mlist.h	/^}MPUList;$/;"	t	typeref:struct:__anon2
MPU_BUFF_LEN	mmt.h	36;"	d
MPU_metadata_s	mmt.h	/^typedef struct MPU_metadata_s \/\/Byte$/;"	s
MPU_packet_header_s	mmt.h	/^typedef struct MPU_packet_header_s \/\/8Byte$/;"	s
MPU_sequence_data	mmt.h	/^	unsigned char * MPU_sequence_data;$/;"	m	struct:mpu_buf_s
MPU_sequence_length	mmt.h	/^	u_int32_t MPU_sequence_length;$/;"	m	struct:mpu_buf_s
MPU_sequence_number	mmt.h	/^	u_int32_t MPU_sequence_number; $/;"	m	struct:mpu_buf_s
MPU_sequence_number	mmt.h	/^	u_int32_t MPU_sequence_number;$/;"	m	struct:MPU_packet_header_s
MPUh_BUFF_LEN	mmt.h	35;"	d
MP_table_asset	mmt.h	/^	MP_table_asset_t *MP_table_asset;$/;"	m	struct:mp_table_s
MP_table_asset_s	mmt.h	/^typedef struct MP_table_asset_s$/;"	s
MP_table_asset_t	mmt.h	/^}MP_table_asset_t;$/;"	t	typeref:struct:MP_table_asset_s
MP_table_mode	mmt.h	/^	u_int8_t MP_table_mode:2;$/;"	m	struct:mp_table_s
MSG_length1	mmt.h	/^	u_int16_t MSG_length1;$/;"	m	struct:signal_header_s
MSG_length2	mmt.h	/^	u_int32_t MSG_length2;$/;"	m	struct:signal_header_s
MakeNode	DList.cc	/^Position MakeNode(const char* i)$/;"	f
NET_MMT_MMTP_DLIST_H_	DList.h	3;"	d
NET_MMT_MMTP_GETFILE_H_	getfile.h	2;"	d
NET_MMT_MMTP_INI_H_	ini.h	2;"	d
NET_MMT_MMTP_MKDIR_H_	mkdir.h	2;"	d
NET_MMT_MMTP_MLIST_H_	Mlist.h	2;"	d
NET_MMT_MMTP_MMTP_H_	mmtp.h	2;"	d
NET_MMT_MMTP_MMT_H_	mmt.h	2;"	d
NET_MMT_MMTP_RINGQ_H_	ringq.h	2;"	d
NET_MMT_MMTP_SEND_H_	send.h	2;"	d
Node	DList.h	/^typedef struct Node$/;"	s
Node	DList.h	/^}Node;$/;"	t	typeref:struct:Node
OBJ1	Makefile	/^OBJ1 = client.o mmtp.o$/;"	m
OBJ2	Makefile	/^OBJ2 = server.o$/;"	m
OBJS	Makefile	/^OBJS = DList.o Mlist.o getfile.o ini.o mmt.o ringq.o send.o mkdir.o ..\/mpu\/stream.o ..\/mpu\/mp4.o$/;"	m
OF_USE_ENCODER	mmt.cc	27;"	d	file:
PAh_BUFF_LEN	mmt.h	76;"	d
PAth_BUFF_LEN	mmt.h	77;"	d
PI_content	mmt.h	/^	PI_content_t *PI_content;$/;"	m	struct:mpi_table_s
PI_content_byte	mmt.h	/^	unsigned char * PI_content_byte;$/;"	m	struct:PI_content_s
PI_content_count	mmt.h	/^	u_int8_t PI_content_count;$/;"	m	struct:mpi_table_s
PI_content_descriptors_byte	mmt.h	/^	unsigned char * PI_content_descriptors_byte;$/;"	m	struct:PI_content_s
PI_content_descriptors_length	mmt.h	/^	u_int8_t PI_content_descriptors_length;$/;"	m	struct:PI_content_s
PI_content_length	mmt.h	/^	u_int16_t PI_content_length;$/;"	m	struct:PI_content_s
PI_content_name	mmt.h	/^        char *PI_content_name;$/;"	m	struct:PI_info
PI_content_name_byte	mmt.h	/^	unsigned char * PI_content_name_byte;$/;"	m	struct:PI_content_s
PI_content_name_length	mmt.h	/^	u_int8_t PI_content_name_length;$/;"	m	struct:PI_content_s
PI_content_path	mmt.h	/^        char *PI_content_path;$/;"	m	struct:PI_info
PI_content_s	mmt.h	/^typedef struct PI_content_s \/\/4Byte$/;"	s
PI_content_t	mmt.h	/^}PI_content_t,*pPI_content_t;$/;"	t	typeref:struct:PI_content_s
PI_content_type	mmt.h	/^        char *PI_content_type;$/;"	m	struct:PI_info
PI_content_type_byte	mmt.h	/^	unsigned char * PI_content_type_byte;$/;"	m	struct:PI_content_s
PI_content_type_length	mmt.h	/^	u_int8_t PI_content_type_length;$/;"	m	struct:PI_content_s
PI_cotent_count	mmt.h	/^		u_int8_t PI_cotent_count;$/;"	m	struct:PI_info
PI_info	mmt.h	/^typedef struct PI_info$/;"	s
PI_info_t	mmt.h	/^}PI_info_t;$/;"	t	typeref:struct:PI_info
PI_mode	mmt.h	/^	u_int8_t PI_mode:2;$/;"	m	struct:mpi_table_s
PI_type	mmt.h	/^        char *PI_type;$/;"	m	struct:PI_info
PNode	DList.h	/^typedef struct Node * PNode;$/;"	t	typeref:struct:Node
Position	DList.h	/^typedef PNode Position;$/;"	t
QUEUE_MAX	ringq.h	8;"	d
RAP_flag	mmt.h	/^    u_int8_t RAP_flag:1;$/;"	m	struct:MMT_packet_header_s
RINGQ	ringq.h	/^}RINGQ;$/;"	t	typeref:struct:ringq
RSV1	mmt.h	/^	u_int16_t RSV1;$/;"	m	struct:SMT_packet_header_s
RSV2	mmt.h	/^	u_int8_t RSV2;$/;"	m	struct:SMT_packet_header_s
ReadFile	getfile.cc	/^int ReadFile(char * path, char ** fdata, u_int16_t *length)$/;"	f
Remove	DList.cc	/^PNode Remove(DList *plist)$/;"	f
RemovePnext	DList.cc	/^int RemovePnext(DList *plist,Position p)$/;"	f
Res_Audio	mmtp.h	/^    Res_Audio     = 0x0008,$/;"	e	enum:mmtp_res_t
Res_CI	mmtp.h	/^    Res_CI        = 0x0001,$/;"	e	enum:mmtp_res_t
Res_Html	mmtp.h	/^    Res_Html      = 0x0002,$/;"	e	enum:mmtp_res_t
Res_Image	mmtp.h	/^    Res_Image     = 0x0010,$/;"	e	enum:mmtp_res_t
Res_Media	mmtp.h	/^    Res_Media     = Res_Video + Res_Audio + Res_Image,$/;"	e	enum:mmtp_res_t
Res_Signal	mmtp.h	/^    Res_Signal    = Res_CI + Res_Html,$/;"	e	enum:mmtp_res_t
Res_Unknown	mmtp.h	/^    Res_Unknown   = 0,$/;"	e	enum:mmtp_res_t
Res_Video	mmtp.h	/^    Res_Video     = 0x0004,$/;"	e	enum:mmtp_res_t
SDC	mmt.h	/^	u_int8_t SDC;$/;"	m	struct:SMT_packet_header_s
SLEEP	fec.h	60;"	d
SMT_packet_header_s	mmt.h	/^typedef struct SMT_packet_header_s \/\/4Byte$/;"	s
SMTh_BUFF_LEN	mmt.h	74;"	d
SOCKADDR	fec.h	55;"	d
SOCKADDR_IN	fec.h	56;"	d
SOCKET	fec.h	54;"	d
SOCKET_ERROR	fec.h	58;"	d
SPS	mmt.h	/^	u_int16_t SPS;$/;"	m	struct:SMT_packet_header_s
SYMBOL_SIZE	fec.h	67;"	d
SetItem	DList.cc	/^void SetItem(Position p,unsigned char* i)$/;"	f
Signal_PACKET_ID	mmt.h	86;"	d
Signal_h_BUFF_LEN	mmt.h	79;"	d
TARGET	Makefile	/^TARGET = client server$/;"	m
TCH	mmt.h	/^	u_int16_t TCH;$/;"	m	struct:SMT_packet_header_s
UDP_BUFF_LEN	mmt.h	28;"	d
UDPh_BUFF_LEN	mmt.h	27;"	d
URL_byte	mmt.h	/^	unsigned char *URL_byte;$/;"	m	struct:ID_mapping_URL_s
URL_count	mmt.h	/^	u_int16_t URL_count;$/;"	m	struct:ID_mapping_URL_s
URL_length	mmt.h	/^	u_int16_t *URL_length;$/;"	m	struct:ID_mapping_URL_s
VERBOSITY	fec.h	72;"	d
_GNU_SOURCE	ini.cc	7;"	d	file:
_GNU_SOURCE	ini.cc	8;"	d	file:
_XOPEN_SOURCE	server.cc	1;"	d	file:
_getline	ini.cc	/^static ssize_t _getline(char **lineptr, size_t *n, FILE *stream)$/;"	f	file:
add_fragmeta	client.cc	/^void add_fragmeta(){$/;"	f
add_mpumeta	client.cc	/^void add_mpumeta(){$/;"	f
add_sample_data	client.cc	/^void add_sample_data(){$/;"	f
addr	mmt.h	/^	struct sockaddr addr;$/;"	m	struct:mmt_socket_s	typeref:struct:mmt_socket_s::sockaddr
aggregation_flag	mmt.h	/^	u_int8_t aggregation_flag:1;$/;"	m	struct:MPU_packet_header_s
args	ini.h	/^    struct ini_arg *args;$/;"	m	struct:ini_section	typeref:struct:ini_section::ini_arg
asset_clock_relation_flag	mmt.h	/^	u_int8_t asset_clock_relation_flag:1;$/;"	m	struct:MP_table_asset_s
asset_descriptors_byte	mmt.h	/^	unsigned char *asset_descriptors_byte;$/;"	m	struct:MP_table_asset_s
asset_descriptors_length	mmt.h	/^	u_int16_t asset_descriptors_length;$/;"	m	struct:MP_table_asset_s
asset_id	mmt.h	/^	asset_id_t *asset_id;$/;"	m	union:Identifier_mapping_byte_s
asset_id	mmt.h	/^        char *asset_id;$/;"	m	struct:Asset_info
asset_id_byte	mmt.h	/^	unsigned char *asset_id_byte;$/;"	m	struct:asset_id_s
asset_id_length	mmt.h	/^	u_int8_t asset_id_length;$/;"	m	struct:asset_id_s
asset_id_s	mmt.h	/^typedef struct asset_id_s$/;"	s
asset_id_scheme	mmt.h	/^	u_int32_t asset_id_scheme;$/;"	m	struct:asset_id_s
asset_id_t	mmt.h	/^} asset_id_t, *passet_id_t;$/;"	t	typeref:struct:asset_id_s
asset_info_t	mmt.h	/^}asset_info_t;$/;"	t	typeref:struct:Asset_info
asset_loaction	mmt.h	/^	asset_location_t *asset_loaction;$/;"	m	struct:MP_table_asset_s
asset_location_s	mmt.h	/^typedef struct asset_location_s$/;"	s
asset_location_t	mmt.h	/^}asset_location_t, *pAsset_location_t;$/;"	t	typeref:struct:asset_location_s
asset_path	mmt.h	/^        char *asset_path;$/;"	m	struct:Asset_info
asset_send_begintime	mmt.h	/^        char *asset_send_begintime;$/;"	m	struct:Asset_info
asset_send_endtime	mmt.h	/^        char *asset_send_endtime;$/;"	m	struct:Asset_info
asset_type	mmt.h	/^	u_int32_t asset_type;$/;"	m	struct:MP_table_asset_s
asset_type	mmt.h	/^        char *asset_type;$/;"	m	struct:Asset_info
assets_count	mmt.h	/^		u_int8_t assets_count;$/;"	m	struct:Asset_info
base_offset	mmt.h	/^	uint32_t base_offset;$/;"	m	struct:item_buf_s
block_fill_flag	mmt.h	/^	char * block_fill_flag;$/;"	m	struct:signal_buf_s
block_number	mmt.h	/^	u_int32_t block_number;$/;"	m	struct:signal_buf_s
broadband_root	mmt.h	/^	char *broadband_root;$/;"	m	struct:MMT_config
broadcast_root	mmt.h	/^	char *broadcast_root;$/;"	m	struct:MMT_config
buf_pool	mmt.h	/^	char * buf_pool;$/;"	m	struct:signal_buf_s
buff_status	mmt.h	/^	u_int8_t buff_status; $/;"	m	struct:signal_buf_s
buffer	ringq.h	/^    void *buffer;     \/\/ data buffer$/;"	m	struct:circular_buffer
buffer_end	ringq.h	/^    void *buffer_end; \/\/ end of data buffer$/;"	m	struct:circular_buffer
capacity	ringq.h	/^    size_t capacity;  \/\/ maximum number of items in the buffer$/;"	m	struct:circular_buffer
cb_free	ringq.cc	/^void cb_free(circular_buffer *cb)$/;"	f
cb_init	ringq.cc	/^void cb_init(circular_buffer *cb, size_t capacity, size_t sz)$/;"	f
cb_pop_front	ringq.cc	/^void cb_pop_front(circular_buffer *cb, void *item)$/;"	f
cb_push_back	ringq.cc	/^void cb_push_back(circular_buffer *cb, const void *item)$/;"	f
check	client.cc	/^void check(){$/;"	f
check_media_sequence	mmtp.cc	/^bool check_media_sequence(const char* clip, int index) {$/;"	f
check_mfu_iscomplete	client.cc	/^int check_mfu_iscomplete(mfu_buf_t mfu_buf, item_buf_t item_buf){$/;"	f
check_mpu_iscomplete	client.cc	/^int check_mpu_iscomplete(mpu_buf_t mpu_buf){$/;"	f
check_receive_condition	client.cc	/^void check_receive_condition(){$/;"	f
circular_buffer	ringq.h	/^typedef struct circular_buffer$/;"	s
circular_buffer	ringq.h	/^} circular_buffer;$/;"	t	typeref:struct:circular_buffer
closesocket	fec.h	59;"	d
cmp	getfile.cc	/^int cmp(char *p1,char *p2) \/* 字符串比较函数 *\/$/;"	f
codec_id	fec.h	/^	UINT32		codec_id;	\/* identifies the code\/codec being used. In practice, the "FEC encoding ID" that identifies the FEC Scheme should$/;"	m	struct:__anon3
controller	mmt.h	/^	char *controller;$/;"	m	struct:MMT_config
copy_mpi_table	mmt.cc	/^int copy_mpi_table(mpi_table_t *mpi_table_dst, mpi_table_t  *mpi_table_src)$/;"	f
count	ringq.h	/^    size_t count;     \/\/ number of items in the buffer$/;"	m	struct:circular_buffer
counter	mmt.h	/^	u_int32_t counter;$/;"	m	struct:fragment_metadata_buf_s
counter	mmt.h	/^	u_int32_t counter;$/;"	m	struct:item_buf_s
counter	mmt.h	/^	u_int32_t counter;$/;"	m	struct:mfu_buf_s
counter	mmt.h	/^	u_int32_t counter;$/;"	m	struct:mpu_metadata_buf_s
create_arg	ini.cc	/^static struct ini_arg *create_arg(struct ini_section *head, char *name, char *value)$/;"	f	file:
create_section	ini.cc	/^static struct ini_section *create_section(struct ini_section *head, char *name)$/;"	f	file:
csum	send.cc	/^unsigned short csum(unsigned short *ptr,int nbytes)$/;"	f
data	DList.h	/^	unsigned char * data;		\/*数据域*\/$/;"	m	struct:Node
data	mmt.h	/^	unsigned  char *data;$/;"	m	struct:item_buf_s
data	mmt.h	/^	unsigned  char *data;$/;"	m	struct:mfu_buf_s
data	mmt.h	/^	unsigned char *data;$/;"	m	struct:fragment_metadata_buf_s
data	mmt.h	/^	unsigned char *data;$/;"	m	struct:mpu_metadata_buf_s
data_store	mmt.h	/^	unsigned char *data_store;$/;"	m	struct:mpu_metadata_buf_s
dependency_counter	mmt.h	/^	u_int8_t dependency_counter;$/;"	m	struct:MFU_time_packet_header_s
dependency_counter	mmt.h	/^u_int8_t dependency_counter;$/;"	m	struct:mfu_sample_s
descriptors_length	mmt.h	/^	u_int16_t descriptors_length;$/;"	m	struct:MPIT_descriptors_s
dest_address	send.h	/^    u_int32_t dest_address;$/;"	m	struct:pseudo_header
do_mpu_header_FT_0	client.cc	/^void do_mpu_header_FT_0(mpu_packet_header_t *p_mpu_header,$/;"	f
do_mpu_header_FT_1	client.cc	/^void do_mpu_header_FT_1(mpu_packet_header_t *p_mpu_header, mmt_packet_header_t *p_mmt_header, unsigned char *buff)$/;"	f
do_mpu_header_FT_2	client.cc	/^void do_mpu_header_FT_2(mpu_packet_header_t *p_mpu_header, mmt_packet_header_t *p_mmt_header, unsigned char *buff, int timed_Flag)$/;"	f
do_mpu_header_f_i_0	client.cc	/^void do_mpu_header_f_i_0(mpu_packet_header_t *p_mpu_header, mmt_packet_header_t *p_mmt_header, unsigned char *buff)$/;"	f
do_mpu_header_f_i_0_item_init	client.cc	/^void do_mpu_header_f_i_0_item_init(mpu_packet_header_t *p_mpu_header, mmt_packet_header_t *p_mmt_header, unsigned char *buff)$/;"	f
dst_port	mmt.h	/^		u_int16_t dst_port;$/;"	m	struct:general_location_info_byte_s::__anon1
dump_buffer_32	mmt.cc	/^dump_buffer_32 (void	*buf,$/;"	f	file:
eth_BUFF_LEN	mmt.h	22;"	d
extension_flag	mmt.h	/^    u_int8_t extension_flag:1;$/;"	m	struct:MMT_packet_header_s
extent_count	mmt.h	/^	uint16_t extent_count;$/;"	m	struct:item_buf_s
extent_length	mmt.h	/^	uint32_t extent_length;$/;"	m	struct:item_buf_s
f_i	mmt.h	/^	u_int8_t f_i:2;$/;"	m	struct:signal_header_s
f_i	mmt.h	/^	u_int8_t f_i:2;\/\/fragmentation_indicator$/;"	m	struct:MPU_packet_header_s
fec	mmt.h	/^	int32_t fec ;$/;"	m	struct:MMT_config
fec_cfg_s	mmt.h	/^typedef struct fec_cfg_s$/;"	s
fec_cfg_t	mmt.h	/^}fec_cfg_t;$/;"	t	typeref:struct:fec_cfg_s
fec_code_id4repair_flow	mmt.h	/^	u_int8_t fec_code_id4repair_flow;$/;"	m	struct:fec_coding_structure01_s
fec_codeid4repair_flow	mmt.h	/^	u_int8_t fec_codeid4repair_flow;$/;"	m	struct:fec_coding_structure11_s
fec_coding_structrue	mmt.h	/^	fec_coding_structure_t * fec_coding_structrue;$/;"	m	struct:fec_flow_s
fec_coding_structure01	mmt.h	/^	fec_coding_structure01_t * fec_coding_structure01;$/;"	m	union:fec_coding_structure_s
fec_coding_structure01_s	mmt.h	/^typedef struct fec_coding_structure01_s$/;"	s
fec_coding_structure01_t	mmt.h	/^}fec_coding_structure01_t;$/;"	t	typeref:struct:fec_coding_structure01_s
fec_coding_structure10	mmt.h	/^	fec_coding_structure10_t * fec_coding_structure10;$/;"	m	union:fec_coding_structure_s
fec_coding_structure10_s	mmt.h	/^typedef struct fec_coding_structure10_s$/;"	s
fec_coding_structure10_t	mmt.h	/^}fec_coding_structure10_t;$/;"	t	typeref:struct:fec_coding_structure10_s
fec_coding_structure11	mmt.h	/^	fec_coding_structure11_t * fec_coding_structure11;$/;"	m	union:fec_coding_structure_s
fec_coding_structure11_s	mmt.h	/^typedef struct fec_coding_structure11_s$/;"	s
fec_coding_structure11_t	mmt.h	/^}fec_coding_structure11_t;$/;"	t	typeref:struct:fec_coding_structure11_s
fec_coding_structure_mode	mmt.h	/^	u_int8_t fec_coding_structure_mode:4;$/;"	m	struct:fec_cfg_s
fec_coding_structure_mode	mmt.h	/^	u_int8_t fec_coding_structure_mode:4;$/;"	m	struct:fec_flow_s
fec_coding_structure_s	mmt.h	/^typedef union fec_coding_structure_s$/;"	u
fec_coding_structure_t	mmt.h	/^}fec_coding_structure_t;$/;"	t	typeref:union:fec_coding_structure_s
fec_flag	mmt.h	/^	u_int8_t fec_flag:1;$/;"	m	struct:fec_cfg_s
fec_flag	mmt.h	/^	u_int8_t fec_flag:1;$/;"	m	struct:fec_message_s
fec_flow	mmt.h	/^	fec_flow_t * fec_flow;$/;"	m	struct:fec_flow_descriptor_s
fec_flow_descriptor	mmt.h	/^	fec_flow_descriptor_t *fec_flow_descriptor;$/;"	m	struct:fec_message_s
fec_flow_descriptor_length	mmt.h	/^	u_int16_t fec_flow_descriptor_length;$/;"	m	struct:fec_message_s
fec_flow_descriptor_s	mmt.h	/^typedef struct fec_flow_descriptor_s$/;"	s
fec_flow_descriptor_t	mmt.h	/^}fec_flow_descriptor_t;$/;"	t	typeref:struct:fec_flow_descriptor_s
fec_flow_id	mmt.h	/^	u_int8_t fec_flow_id;$/;"	m	struct:fec_flow_s
fec_flow_s	mmt.h	/^typedef struct fec_flow_s$/;"	s
fec_flow_t	mmt.h	/^}fec_flow_t;$/;"	t	typeref:struct:fec_flow_s
fec_message_s	mmt.h	/^typedef struct fec_message_s$/;"	s
fec_message_t	mmt.h	/^}fec_message_t;$/;"	t	typeref:struct:fec_message_s
fec_oti_t	fec.h	/^} fec_oti_t;$/;"	t	typeref:struct:__anon3
find_arg	ini.cc	/^static struct ini_arg *find_arg(struct ini_section *curr, char *name)$/;"	f	file:
find_section	ini.cc	/^static struct ini_section *find_section(struct ini_section *head, char *name)$/;"	f	file:
flag	mmt.h	/^	u_int8_t flag ;$/;"	m	struct:fragment_metadata_buf_s
flag	mmt.h	/^	u_int8_t flag ;$/;"	m	struct:item_buf_s
flag	mmt.h	/^	u_int8_t flag ;$/;"	m	struct:mfu_buf_s
flag	mmt.h	/^	u_int8_t flag ;$/;"	m	struct:mpu_buf_s
flag	mmt.h	/^	u_int8_t flag;$/;"	m	struct:mpu_metadata_buf_s
fname	mmtp.h	/^    char fname[512];    \/\/> received filename$/;"	m	struct:mmtp_rinfo_t
frag_counter	mmt.h	/^	u_int8_t frag_counter;$/;"	m	struct:signal_header_s
fragment_counter	mmt.h	/^	u_int8_t fragment_counter;$/;"	m	struct:MPU_packet_header_s
fragment_metadata_buf	mmt.h	/^	fragment_metadata_buf_t fragment_metadata_buf;$/;"	m	struct:mpu_buf_s
fragment_metadata_buf_s	mmt.h	/^typedef struct fragment_metadata_buf_s \/\/30Byte$/;"	s
fragment_metadata_buf_t	mmt.h	/^}fragment_metadata_buf_t,*pfragment_metadata_buf_t;$/;"	t	typeref:struct:fragment_metadata_buf_s
fragment_metadata_t	mmt.h	/^}fragment_metadata_t;$/;"	t	typeref:struct:Fragment_metadata_s
free_fec_message	mmt.cc	/^int free_fec_message(fec_message_t *fec_message)$/;"	f
free_fragment_metadata_buf	mmt.cc	/^int free_fragment_metadata_buf(fragment_metadata_buf_t *fragment_metadata_buf )$/;"	f
free_mp_table	mmt.cc	/^int free_mp_table(mp_table_t *mp_table )$/;"	f
free_mpi_table	mmt.cc	/^int free_mpi_table(mpi_table_t *mpi_table)$/;"	f
free_mpu_buf	mmt.cc	/^int free_mpu_buf(mpu_buf_t *mpu_buf )$/;"	f
free_mpu_metadata_buf	mmt.cc	/^int free_mpu_metadata_buf(mpu_metadata_buf_t *mpu_metadata_buf )$/;"	f
free_pa_message	mmt.cc	/^int free_pa_message(pa_message_t *pa_message)$/;"	f
free_pa_table	mmt.cc	/^int free_pa_table(pa_table_t *pa_table )$/;"	f
g_asset_clips	client.cc	/^char g_asset_clips[MAX_ASSET_NUM][MAX_PATH];$/;"	v
g_asset_ids	client.cc	/^char g_asset_ids[MAX_ASSET_NUM][MAX_PATH];$/;"	v
g_asset_num	client.cc	/^int g_asset_num = 0;$/;"	v
g_mmt_socket	client.cc	/^mmt_socket_t  g_mmt_socket;$/;"	v
g_mmtp_cb	mmtp.cc	/^mmtp_callback_t g_mmtp_cb;$/;"	v
g_pktid_asset	client.cc	/^int g_pktid_asset[MAX_ID_NUM]; \/\/ pktid => g_asset_ids$/;"	v
g_pktid_init	client.cc	/^int g_pktid_init = -2;$/;"	v
g_running	client.cc	/^int g_running = 1;								\/*线程运行控制*\/$/;"	v
general_location_info	mmt.h	/^	general_location_info_t *general_location_info;$/;"	m	struct:asset_location_s
general_location_info_byte	mmt.h	/^	general_location_info_byte_t * general_location_info_byte;$/;"	m	struct:general_location_info_s
general_location_info_byte_s	mmt.h	/^typedef union general_location_info_byte_s$/;"	u
general_location_info_byte_t	mmt.h	/^}general_location_info_byte_t, *pGeneral_location_info_byte_t;$/;"	t	typeref:union:general_location_info_byte_s
general_location_info_s	mmt.h	/^typedef struct general_location_info_s$/;"	s
general_location_info_t	mmt.h	/^}general_location_info_t, pGeneral_location_info_t;$/;"	t	typeref:struct:general_location_info_s
getFileNameArray	getfile.cc	/^int getFileNameArray(const char *path, u_int32_t* fileCount,char ***fileNameList)$/;"	f
getFileNameArray2	getfile.cc	/^char ** getFileNameArray2(const char *path, u_int32_t* fileCount)$/;"	f
get_bytes	mmt.cc	/^int get_bytes(unsigned char *srcbuff,unsigned char **dstbuff, u_int32_t number)$/;"	f
get_content_type	client.cc	/^enum mmtp_res_t get_content_type(int packet_id) {$/;"	f
get_full_path	getfile.cc	/^void get_full_path(const char *path ,char * filename,char ** fullpath )$/;"	f
get_full_path2	getfile.cc	/^char* get_full_path2(const char *path ,char * filename)$/;"	f
get_mp_table_length	mmt.cc	/^int get_mp_table_length(mp_table_t *mp_table)$/;"	f
get_send_timestamp	mmt.cc	/^int get_send_timestamp()$/;"	f
head	DList.h	/^	PNode head;		\/*指向头节点*\/$/;"	m	struct:__anon4
head	Mlist.h	/^	mPNode head;		\/*指向头节点*\/$/;"	m	struct:__anon2
head	ringq.h	/^    void *head;       \/\/ pointer to head$/;"	m	struct:circular_buffer
head	ringq.h	/^   int head; \/* 头部，出队列方向*\/$/;"	m	struct:ringq
id	mmtp.h	/^    char id[512];       \/\/> asset id$/;"	m	struct:mmtp_rinfo_t
identifier_mapping_byte	mmt.h	/^	Identifier_mapping_byte_t * identifier_mapping_byte;$/;"	m	struct:Identifier_mapping_s
identifier_type	mmt.h	/^	u_int8_t identifier_type;$/;"	m	struct:Identifier_mapping_s
index	mmtp.h	/^    int  index;         \/\/> reserverd for sequence index$/;"	m	struct:mmtp_rinfo_t
ini_arg	ini.h	/^struct ini_arg$/;"	s
ini_free	ini.cc	/^void ini_free(ini_t *handler)$/;"	f
ini_load	ini.cc	/^ini_t *ini_load(char *path)$/;"	f
ini_print	ini.cc	/^static void ini_print(ini_t *handler)$/;"	f	file:
ini_read_bool	ini.cc	/^int ini_read_bool(ini_t *handler,$/;"	f
ini_read_double	ini.cc	/^int ini_read_double(ini_t *handler,$/;"	f
ini_read_float	ini.cc	/^int ini_read_float(ini_t *handler,$/;"	f
ini_read_int	ini.cc	/^int ini_read_int(ini_t *handler,$/;"	f
ini_read_int16	ini.cc	/^int ini_read_int16(ini_t *handler,$/;"	f
ini_read_int32	ini.cc	/^int ini_read_int32(ini_t *handler,$/;"	f
ini_read_int64	ini.cc	/^int ini_read_int64(ini_t *handler,$/;"	f
ini_read_int8	ini.cc	/^int ini_read_int8(ini_t *handler,$/;"	f
ini_read_ipv4_addr	ini.cc	/^int ini_read_ipv4_addr(ini_t *handler,$/;"	f
ini_read_num	ini.cc	/^static int ini_read_num(ini_t *handler,$/;"	f	file:
ini_read_str	ini.cc	/^int ini_read_str(ini_t *handler,$/;"	f
ini_read_strn	ini.cc	/^int ini_read_strn(ini_t *handler,$/;"	f
ini_read_uint16	ini.cc	/^int ini_read_uint16(ini_t *handler,$/;"	f
ini_read_uint32	ini.cc	/^int ini_read_uint32(ini_t *handler,$/;"	f
ini_read_uint64	ini.cc	/^int ini_read_uint64(ini_t *handler,$/;"	f
ini_read_uint8	ini.cc	/^int ini_read_uint8(ini_t *handler,$/;"	f
ini_read_unsigned	ini.cc	/^int ini_read_unsigned(ini_t *handler,$/;"	f
ini_section	ini.h	/^struct ini_section$/;"	s
ini_t	ini.h	/^typedef struct ini_section ini_t;$/;"	t	typeref:struct:ini_section
init_fec	mmt.cc	/^int init_fec($/;"	f
init_mfu_non_time_header	mmt.cc	/^int init_mfu_non_time_header(mfu_non_time_packet_header_t *mfu_non_time_header,unsigned char *MFUh_nt)$/;"	f
init_mfu_sample	mmt.cc	/^int init_mfu_sample(mfu_sample_t *mfu_sample,unsigned char *mfu_sample_buf)$/;"	f
init_mfu_time_header	mmt.cc	/^int init_mfu_time_header(mfu_time_packet_header_t *mfu_time_header,unsigned char *MFUh_t)$/;"	f
init_mmtp	mmtp.cc	/^void init_mmtp() {$/;"	f
init_mmtp_header	mmt.cc	/^int init_mmtp_header(mmt_packet_header_t *mmt_header,unsigned char *MMTPh)$/;"	f
init_mp_table	mmt.cc	/^int init_mp_table(mp_table_t *mp_table, unsigned char **mp_table_buf)$/;"	f
init_mpi_table	mmt.cc	/^int init_mpi_table(mpi_table_t *mpi_table, unsigned char **mpi_table_buf)$/;"	f
init_mpu_buf	mmt.cc	/^int init_mpu_buf(mpu_buf_t *mpu_buf )$/;"	f
init_mpu_header	mmt.cc	/^int init_mpu_header(mpu_packet_header_t *mpu_header,unsigned char *MPUh)$/;"	f
init_pa_message	mmt.cc	/^int init_pa_message(pa_message_t *pa_header,unsigned char *PAh)$/;"	f
init_pa_table	mmt.cc	/^int init_pa_table(pa_table_t *pa_table ,unsigned char *PA_table_buf)$/;"	f
init_signal_header	mmt.cc	/^int init_signal_header(signal_header_t *signal_header,unsigned char *Signal_h)$/;"	f
init_smt_header	mmt.cc	/^int init_smt_header(smt_packet_header_t *smt_header,unsigned char *SMTh)$/;"	f
init_table_header	mmt.cc	/^int init_table_header(table_header_t *table_header ,unsigned char *table_buf)$/;"	f
inti_enc_symbols_tab	mmt.cc	/^int inti_enc_symbols_tab( $/;"	f
ipv4_dst_addr	mmt.h	/^		u_int32_t ipv4_dst_addr;$/;"	m	struct:general_location_info_byte_s::__anon1
ipv4_src_addr	mmt.h	/^		u_int32_t ipv4_src_addr;$/;"	m	struct:general_location_info_byte_s::__anon1
is_comment	ini.cc	/^static bool is_comment(char **line)$/;"	f	file:
is_fragmeta	client.cc	/^void is_fragmeta(){$/;"	f
is_mpumeta	client.cc	/^void is_mpumeta(){$/;"	f
is_sample_data	client.cc	/^void is_sample_data(){$/;"	f
item	mmt.h	/^	item_buf_t *item;$/;"	m	struct:mpu_buf_s
item_ID	mmt.h	/^	u_int32_t item_ID;$/;"	m	struct:MFU_non_time_packet_header_s
item_ID	mmt.h	/^	uint16_t item_ID;    \/* theses are arrays *\/$/;"	m	struct:item_buf_s
item_buf_s	mmt.h	/^typedef struct item_buf_s$/;"	s
item_buf_t	mmt.h	/^}item_buf_t,*pitem_buf_t;$/;"	t	typeref:struct:item_buf_s
item_counter	mmt.h	/^	uint16_t item_counter;$/;"	m	struct:mpu_buf_s
item_number	mmt.h	/^	u_int16_t item_number;$/;"	m	struct:mpu_buf_s
k	fec.h	/^	UINT32		k;$/;"	m	struct:__anon3
length	mmt.h	/^	 u_int32_t length;$/;"	m	struct:MPU_metadata_s
length	mmt.h	/^	u_int16_t length;$/;"	m	struct:MMT_packet_header_extension_header_s
length	mmt.h	/^	u_int16_t length;$/;"	m	struct:MPU_packet_header_s
length	mmt.h	/^	u_int16_t length;$/;"	m	struct:fec_message_s
length	mmt.h	/^	u_int16_t length;$/;"	m	struct:mp_table_s
length	mmt.h	/^	u_int16_t length;$/;"	m	struct:mpi_table_s
length	mmt.h	/^	u_int16_t length;$/;"	m	struct:pa_table_s
length	mmt.h	/^	u_int16_t length;$/;"	m	struct:table_header_s
length	mmt.h	/^	u_int32_t length;$/;"	m	struct:fragment_metadata_buf_s
length	mmt.h	/^	u_int32_t length;$/;"	m	struct:item_buf_s
length	mmt.h	/^	u_int32_t length;$/;"	m	struct:mfu_buf_s
length	mmt.h	/^	u_int32_t length;$/;"	m	struct:mpu_metadata_buf_s
length	mmt.h	/^	u_int32_t length;\/\/ new version$/;"	m	struct:pa_message_s
length	mmt.h	/^    u_int32_t length;$/;"	m	struct:Fragment_metadata_s
length	mmt.h	/^    u_int32_t length;$/;"	m	struct:MFU_s
length	mmt.h	/^u_int32_t length;$/;"	m	struct:mfu_sample_s
listen_port	mmt.h	/^	int16_t listen_port;$/;"	m	struct:MMT_config
location_count	mmt.h	/^	u_int8_t location_count;$/;"	m	struct:asset_location_s
location_type	mmt.h	/^	u_int8_t location_type;$/;"	m	struct:general_location_info_s
location_type01	mmt.h	/^	} location_type01;$/;"	m	union:general_location_info_byte_s	typeref:struct:general_location_info_byte_s::__anon1
log_path	mmt.h	/^	char *log_path;$/;"	m	struct:MMT_config
mClearList	Mlist.cc	/^void mClearList(MPUList *plist)$/;"	f
mDelFirst	Mlist.cc	/^mPNode mDelFirst(MPUList *plist)$/;"	f
mDelFirst2	Mlist.cc	/^mPNode mDelFirst2(MPUList *plist)$/;"	f
mDestroyList	Mlist.cc	/^void mDestroyList(MPUList *plist)$/;"	f
mFreemNode	Mlist.cc	/^void mFreemNode(mPNode p)$/;"	f
mGetHead	Mlist.cc	/^mPosition mGetHead(MPUList *plist)$/;"	f
mGetItem	Mlist.cc	/^unsigned char* mGetItem(mPosition p)$/;"	f
mGetNext	Mlist.cc	/^mPosition mGetNext(mPosition p)$/;"	f
mGetPrevious	Mlist.cc	/^mPosition mGetPrevious(mPosition p)$/;"	f
mGetSize	Mlist.cc	/^int mGetSize(MPUList *plist)$/;"	f
mGetTail	Mlist.cc	/^mPosition mGetTail(MPUList *plist)$/;"	f
mInitList	Mlist.cc	/^MPUList * mInitList()$/;"	f
mInsAfter	Mlist.cc	/^mPNode mInsAfter(MPUList *plist,mPosition p,mPNode s)$/;"	f
mInsBefore	Mlist.cc	/^mPNode mInsBefore(MPUList *plist,mPosition p,mPNode s)$/;"	f
mInsFirst	Mlist.cc	/^mPNode mInsFirst(MPUList *plist,mPNode pnode)$/;"	f
mIsEmpty	Mlist.cc	/^int mIsEmpty(MPUList *plist)$/;"	f
mListTraverse	Mlist.cc	/^void mListTraverse(MPUList *plist,void(*visit)(mpu_buf_t*))$/;"	f
mLocatePos	Mlist.cc	/^mPNode mLocatePos(MPUList *plist,int i)$/;"	f
mMakeNode	Mlist.cc	/^mPosition mMakeNode(mpu_buf_t *mpu_buf)$/;"	f
mNode	Mlist.h	/^typedef struct mNode$/;"	s
mNode	Mlist.h	/^}mNode;$/;"	t	typeref:struct:mNode
mPNode	Mlist.h	/^typedef struct mNode * mPNode;$/;"	t	typeref:struct:mNode
mPosition	Mlist.h	/^typedef mPNode mPosition;$/;"	t
mRemove	Mlist.cc	/^mPNode mRemove(MPUList *plist)$/;"	f
mRemovePnext	Mlist.cc	/^int mRemovePnext(MPUList *plist,mPosition p)$/;"	f
mSetItem	Mlist.cc	/^void mSetItem(mPosition p,mpu_buf_t *mpu_buf)$/;"	f
main	client.cc	/^int main(int argc, char *argv[])$/;"	f
main	server.cc	/^int main(int argc, char *argv[])$/;"	f
make_fec_message	mmt.cc	/^int make_fec_message(fec_message_t *fec_message, fec_cfg_t *fec_cfg)$/;"	f
make_file	client.cc	/^void make_file(char *mpu_name, char *data, int len ) {$/;"	f
make_file	server.cc	/^void make_file(char *mpu_name, char *data, int len) {$/;"	f
make_mp_table	mmt.cc	/^int make_mp_table(mp_table_t* mp_table, asset_info_t* asset_info)$/;"	f
make_mpi_table	mmt.cc	/^int make_mpi_table(mpi_table_t* mpi_table, PI_info_t* PI_info)$/;"	f
max_client_num	mmt.h	/^	int32_t max_client_num;$/;"	m	struct:MMT_config
max_k4repair_flow	mmt.h	/^	u_int32_t max_k4repair_flow;$/;"	m	struct:fec_coding_structure01_s
max_p4repair_flow	mmt.h	/^	u_int32_t max_p4repair_flow;$/;"	m	struct:fec_coding_structure01_s
maximum_value	mmt.h	73;"	d
media_type	mmt.h	/^        char *media_type;$/;"	m	struct:Asset_info
message_counter	client.cc	/^int message_counter=0;$/;"	v
message_id	mmt.h	/^	u_int16_t message_id;$/;"	m	struct:fec_message_s
message_id	mmt.h	/^	u_int16_t message_id;$/;"	m	struct:pa_message_s
message_mutex	client.cc	/^pthread_mutex_t message_mutex;							\/*互斥区*\/$/;"	v
mfu	mmt.h	/^	mfu_buf_t *mfu;$/;"	m	struct:mpu_buf_s
mfu_buf_s	mmt.h	/^typedef struct mfu_buf_s \/\/30Byte$/;"	s
mfu_buf_t	mmt.h	/^}mfu_buf_t,*pmfu_buf_t;$/;"	t	typeref:struct:mfu_buf_s
mfu_counter	mmt.h	/^	u_int32_t mfu_counter;$/;"	m	struct:mpu_buf_s
mfu_non_time_packet_header_t	mmt.h	/^}mfu_non_time_packet_header_t,*pmfu_non_time_packet_header_t;$/;"	t	typeref:struct:MFU_non_time_packet_header_s
mfu_number	mmt.h	/^	u_int32_t mfu_number;$/;"	m	struct:mpu_buf_s
mfu_sample	mmt.h	/^	mfu_sample_t *mfu_sample;$/;"	m	struct:mpu_buf_s
mfu_sample_s	mmt.h	/^typedef struct mfu_sample_s \/\/30Byte$/;"	s
mfu_sample_t	mmt.h	/^}mfu_sample_t,*pmfu_sample_t;$/;"	t	typeref:struct:mfu_sample_s
mfu_t	mmt.h	/^}mfu_t;$/;"	t	typeref:struct:MFU_s
mfu_time_packet_header_t	mmt.h	/^}mfu_time_packet_header_t,*pmfu_time_packet_header_t;$/;"	t	typeref:struct:MFU_time_packet_header_s
mmt	mmtp.cc	/^namespace mmt{$/;"	n	file:
mmt_config_t	mmt.h	/^}mmt_config_t;$/;"	t	typeref:struct:MMT_config
mmt_packet_header_extension_header_t	mmt.h	/^}mmt_packet_header_extension_header_t,*pmmt_packet_header_extension_header_t;$/;"	t	typeref:struct:MMT_packet_header_extension_header_s
mmt_packet_header_t	mmt.h	/^}mmt_packet_header_t,*pmmt_packet_header_t;$/;"	t	typeref:struct:MMT_packet_header_s
mmt_socket_s	mmt.h	/^typedef struct mmt_socket_s \/\/$/;"	s
mmt_socket_t	mmt.h	/^}mmt_socket_t,*pmmt_socket_t;$/;"	t	typeref:struct:mmt_socket_s
mmtp_callback_t	mmtp.h	/^typedef void (*mmtp_callback_t) (struct mmtp_rinfo_t* rinfo);$/;"	t
mmtp_res_t	mmtp.h	/^enum mmtp_res_t {$/;"	g
mmtp_rinfo_t	mmtp.h	/^struct mmtp_rinfo_t {$/;"	s
mode	mmt.h	/^	char *mode;$/;"	m	struct:MMT_config
movie_fragment_sequence_number	mmt.h	/^	u_int32_t movie_fragment_sequence_number;$/;"	m	struct:MFU_time_packet_header_s
movie_fragment_sequence_number	mmt.h	/^u_int32_t movie_fragment_sequence_number;$/;"	m	struct:mfu_sample_s
mp_table	mmt.h	/^	mp_table_t mp_table;$/;"	m	struct:pa_message_s
mp_table_s	mmt.h	/^typedef struct mp_table_s \/\/4Byte$/;"	s
mp_table_t	mmt.h	/^}mp_table_t;$/;"	t	typeref:struct:mp_table_s
mpi_table	mmt.h	/^	mpi_table_t mpi_table;$/;"	m	struct:pa_message_s
mpi_table_s	mmt.h	/^typedef struct mpi_table_s \/\/4Byte$/;"	s
mpi_table_t	mmt.h	/^}mpi_table_t;$/;"	t	typeref:struct:mpi_table_s
mpu_buf	Mlist.h	/^	mpu_buf_t *mpu_buf;		\/*数据域*\/$/;"	m	struct:mNode
mpu_buf	client.cc	/^mpu_buf_t mpu_buf;$/;"	v
mpu_buf_s	mmt.h	/^typedef struct mpu_buf_s \/\/$/;"	s
mpu_buf_t	mmt.h	/^}mpu_buf_t,*pmpu_buf_t;$/;"	t	typeref:struct:mpu_buf_s
mpu_buff_list	client.cc	/^DList *mpu_buff_list = NULL;$/;"	v
mpu_buffer_has_item	client.cc	/^int mpu_buffer_has_item=0;							\/*缓冲区计数值*\/$/;"	v
mpu_consumer_f	client.cc	/^void *mpu_consumer_f(void *arg)						\/*消费者线程程序*\/$/;"	f
mpu_metadata_buf	mmt.h	/^	mpu_metadata_buf_t  mpu_metadata_buf;$/;"	m	struct:mpu_buf_s
mpu_metadata_buf_s	mmt.h	/^typedef struct mpu_metadata_buf_s \/\/30Byte$/;"	s
mpu_metadata_buf_t	mmt.h	/^}mpu_metadata_buf_t,*pmpu_metadata_buf_t;$/;"	t	typeref:struct:mpu_metadata_buf_s
mpu_metadata_t	mmt.h	/^}mpu_metadata_t;$/;"	t	typeref:struct:MPU_metadata_s
mpu_mutex	client.cc	/^pthread_mutex_t mpu_mutex;							\/*互斥区*\/$/;"	v
mpu_packet_header_t	mmt.h	/^}mpu_packet_header_t,*pmpu_packet_header_t;$/;"	t	typeref:struct:MPU_packet_header_s
muli_length	mmt.h	/^u_int32_t muli_length;$/;"	m	struct:mfu_sample_s
muli_name	mmt.h	/^u_int32_t muli_name;$/;"	m	struct:mfu_sample_s
muli_reserved1	mmt.h	/^u_int16_t muli_reserved1;$/;"	m	struct:mfu_sample_s
muli_reserved2	mmt.h	/^u_int8_t muli_reserved2;$/;"	m	struct:mfu_sample_s
multicast_ip	mmt.h	/^	char *multicast_ip;$/;"	m	struct:MMT_config
multicast_port	mmt.h	/^	int16_t multicast_port;$/;"	m	struct:MMT_config
multiview_port	mmt.h	/^	int16_t multiview_port;$/;"	m	struct:MMT_config
n	fec.h	/^	UINT32		n;$/;"	m	struct:__anon3
name	ini.h	/^    char  *name;$/;"	m	struct:ini_arg
name	ini.h	/^    char  *name;$/;"	m	struct:ini_section
next	DList.h	/^	PNode next;		\/*指向后继*\/$/;"	m	struct:Node
next	Mlist.h	/^	mPNode next;		\/*指向后继*\/$/;"	m	struct:mNode
next	ini.h	/^    struct ini_arg *next;$/;"	m	struct:ini_arg	typeref:struct:ini_arg::ini_arg
next	ini.h	/^    struct ini_section *next;$/;"	m	struct:ini_section	typeref:struct:ini_section::ini_section
num_of_layer4LAFEC	mmt.h	/^	u_int8_t num_of_layer4LAFEC;$/;"	m	struct:fec_coding_structure11_s
number	mmt.h	/^	 u_int32_t number;$/;"	m	struct:MPU_metadata_s
number	mmt.h	/^	u_int32_t number;$/;"	m	struct:fragment_metadata_buf_s
number	mmt.h	/^	u_int32_t number;$/;"	m	struct:item_buf_s
number	mmt.h	/^	u_int32_t number;$/;"	m	struct:mfu_buf_s
number	mmt.h	/^	u_int32_t number;$/;"	m	struct:mpu_metadata_buf_s
number	mmt.h	/^    u_int32_t number;$/;"	m	struct:Fragment_metadata_s
number	mmt.h	/^    u_int32_t number;$/;"	m	struct:MFU_s
number_of_assets	mmt.h	/^	u_int8_t number_of_assets;$/;"	m	struct:fec_cfg_s
number_of_assets	mmt.h	/^	u_int8_t number_of_assets;$/;"	m	struct:fec_flow_s
number_of_assets	mmt.h	/^	u_int8_t number_of_assets;$/;"	m	struct:mp_table_s
number_of_fec_flows	mmt.h	/^	u_int8_t number_of_fec_flows;$/;"	m	struct:fec_flow_descriptor_s
number_of_parity_flows	mmt.h	/^	u_int8_t number_of_parity_flows;$/;"	m	struct:fec_coding_structure10_s
number_of_repairsym_per_packet	mmt.h	/^	u_int16_t number_of_repairsym_per_packet;$/;"	m	struct:ssbg_mode10_s
number_of_subblock_per_sourblock	mmt.h	/^	u_int8_t number_of_subblock_per_sourblock;$/;"	m	struct:fec_coding_structure10_s
number_of_symele_per_sourcesym	mmt.h	/^	u_int16_t number_of_symele_per_sourcesym;$/;"	m	struct:ssbg_mode10_s
number_of_tables	mmt.h	/^	u_int8_t number_of_tables;$/;"	m	struct:pa_message_s
offset	mmt.h	/^	u_int32_t offset;$/;"	m	struct:MFU_time_packet_header_s
offset	mmt.h	/^u_int32_t offset;$/;"	m	struct:mfu_sample_s
open_sock_chrome	client.cc	/^void open_sock_chrome(){$/;"	f
pAsset_location_t	mmt.h	/^}asset_location_t, *pAsset_location_t;$/;"	t	typeref:struct:asset_location_s
pGeneral_location_info_byte_t	mmt.h	/^}general_location_info_byte_t, *pGeneral_location_info_byte_t;$/;"	t	typeref:union:general_location_info_byte_s
pGeneral_location_info_t	mmt.h	/^}general_location_info_t, pGeneral_location_info_t;$/;"	t	typeref:struct:general_location_info_s
pID_mapping_URL_t	mmt.h	/^}ID_mapping_URL_t,*pID_mapping_URL_t;$/;"	t	typeref:struct:ID_mapping_URL_s
pIdentifier_mapping_byte_t	mmt.h	/^}Identifier_mapping_byte_t, *pIdentifier_mapping_byte_t;$/;"	t	typeref:union:Identifier_mapping_byte_s
pIdentifier_mapping_t	mmt.h	/^}Identifier_mapping_t, *pIdentifier_mapping_t;$/;"	t	typeref:struct:Identifier_mapping_s
pMPIT_descriptors_t	mmt.h	/^}MPIT_descriptors_t, *pMPIT_descriptors_t;$/;"	t	typeref:struct:MPIT_descriptors_s
pPI_content_t	mmt.h	/^}PI_content_t,*pPI_content_t;$/;"	t	typeref:struct:PI_content_s
pa_message	client.cc	/^pa_message_t pa_message;  \/\/信令控制MPU恢复,全局变量$/;"	v
pa_message_s	mmt.h	/^typedef struct pa_message_s \/\/8Byte$/;"	s
pa_message_t	mmt.h	/^}pa_message_t;$/;"	t	typeref:struct:pa_message_s
pa_table	mmt.h	/^	pa_table_t pa_table ;$/;"	m	struct:pa_message_s
pa_table_s	mmt.h	/^typedef struct pa_table_s \/\/4Byte$/;"	s
pa_table_t	mmt.h	/^}pa_table_t;$/;"	t	typeref:struct:pa_table_s
packet_counter	mmt.h	/^    u_int32_t packet_counter;$/;"	m	struct:MMT_packet_header_s
packet_counter_flag	mmt.h	/^    u_int8_t packet_counter_flag:1;$/;"	m	struct:MMT_packet_header_s
packet_id	mmt.h	/^		u_int16_t packet_id;$/;"	m	struct:general_location_info_byte_s::__anon1
packet_id	mmt.h	/^	u_int16_t *packet_id;$/;"	m	struct:fec_cfg_s
packet_id	mmt.h	/^	u_int16_t *packet_id;$/;"	m	struct:fec_flow_s
packet_id	mmt.h	/^	u_int16_t packet_id; $/;"	m	struct:mpu_buf_s
packet_id	mmt.h	/^	u_int16_t packet_id; $/;"	m	struct:signal_buf_s
packet_id	mmt.h	/^	u_int16_t packet_id;$/;"	m	union:general_location_info_byte_s
packet_id	mmt.h	/^        uint16_t packet_id;$/;"	m	struct:Asset_info
packet_id	mmt.h	/^    u_int16_t packet_id;$/;"	m	struct:MMT_packet_header_s
packet_sequence_number	mmt.h	/^    u_int32_t packet_sequence_number;$/;"	m	struct:MMT_packet_header_s
passet_id_t	mmt.h	/^} asset_id_t, *passet_id_t;$/;"	t	typeref:struct:asset_id_s
pat_content	mmt.h	/^	unsigned char *pat_content;$/;"	m	struct:pa_table_s
pathConvert	server.cc	/^int pathConvert(char *srcPath, char **desPath, char *cfgPath)$/;"	f
pfragment_metadata_buf_t	mmt.h	/^}fragment_metadata_buf_t,*pfragment_metadata_buf_t;$/;"	t	typeref:struct:fragment_metadata_buf_s
pitem_buf_t	mmt.h	/^}item_buf_t,*pitem_buf_t;$/;"	t	typeref:struct:item_buf_s
placeholder	send.h	/^    u_int8_t placeholder;$/;"	m	struct:pseudo_header
pmfu_buf_t	mmt.h	/^}mfu_buf_t,*pmfu_buf_t;$/;"	t	typeref:struct:mfu_buf_s
pmfu_non_time_packet_header_t	mmt.h	/^}mfu_non_time_packet_header_t,*pmfu_non_time_packet_header_t;$/;"	t	typeref:struct:MFU_non_time_packet_header_s
pmfu_sample_t	mmt.h	/^}mfu_sample_t,*pmfu_sample_t;$/;"	t	typeref:struct:mfu_sample_s
pmfu_time_packet_header_t	mmt.h	/^}mfu_time_packet_header_t,*pmfu_time_packet_header_t;$/;"	t	typeref:struct:MFU_time_packet_header_s
pmmt_packet_header_extension_header_t	mmt.h	/^}mmt_packet_header_extension_header_t,*pmmt_packet_header_extension_header_t;$/;"	t	typeref:struct:MMT_packet_header_extension_header_s
pmmt_packet_header_t	mmt.h	/^}mmt_packet_header_t,*pmmt_packet_header_t;$/;"	t	typeref:struct:MMT_packet_header_s
pmmt_socket_t	mmt.h	/^}mmt_socket_t,*pmmt_socket_t;$/;"	t	typeref:struct:mmt_socket_s
pmpu_buf_t	mmt.h	/^}mpu_buf_t,*pmpu_buf_t;$/;"	t	typeref:struct:mpu_buf_s
pmpu_metadata_buf_t	mmt.h	/^}mpu_metadata_buf_t,*pmpu_metadata_buf_t;$/;"	t	typeref:struct:mpu_metadata_buf_s
pmpu_packet_header_t	mmt.h	/^}mpu_packet_header_t,*pmpu_packet_header_t;$/;"	t	typeref:struct:MPU_packet_header_s
present_time	mmt.h	/^    u_int32_t present_time;$/;"	m	struct:MMT_packet_header_s
previous	DList.h	/^	PNode previous; \/*指向前驱*\/$/;"	m	struct:Node
previous	Mlist.h	/^	mPNode previous; \/*指向前驱*\/$/;"	m	struct:mNode
print_ringq	ringq.h	43;"	d
priority	mmt.h	/^u_int8_t priority;$/;"	m	struct:mfu_sample_s
private_fec	mmt.h	/^	private_fec_t * private_fec;$/;"	m	struct:fec_coding_structure01_s
private_fec_flag	mmt.h	/^	u_int8_t private_fec_flag:1;$/;"	m	struct:fec_cfg_s
private_fec_flag	mmt.h	/^	u_int8_t private_fec_flag:1;$/;"	m	struct:fec_message_s
private_fec_s	mmt.h	/^typedef struct private_fec_s$/;"	s
private_fec_t	mmt.h	/^}private_fec_t;$/;"	t	typeref:struct:private_fec_s
private_field	mmt.h	/^	u_int8_t * private_field;$/;"	m	struct:private_fec_s
private_field_length	mmt.h	/^	u_int8_t private_field_length:7;$/;"	m	struct:private_fec_s
private_flag	mmt.h	/^	u_int8_t private_flag:1;$/;"	m	struct:private_fec_s
process_packet	client.cc	/^void process_packet(){$/;"	f
process_sock_chrome	client.cc	/^void process_sock_chrome(){$/;"	f
producter_f	client.cc	/^void *producter_f (void *arg)					\/*生产者线程程序*\/$/;"	f
protec_window_size	mmt.h	/^	u_int32_t protec_window_size;$/;"	m	struct:fec_coding_structure01_s
protec_window_time	mmt.h	/^	u_int32_t protec_window_time;$/;"	m	struct:fec_coding_structure01_s
protocol	send.h	/^    u_int8_t protocol;$/;"	m	struct:pseudo_header
pseudo_header	send.h	/^struct pseudo_header$/;"	s
psignal_buf_t	mmt.h	/^}signal_buf_t,*psignal_buf_t;$/;"	t	typeref:struct:signal_buf_s
push_mmtp_cihtml	mmtp.cc	/^void push_mmtp_cihtml(int res, const char* fname) {$/;"	f
push_mmtp_media	mmtp.cc	/^void push_mmtp_media(int res, const char* id, const char* url, const char* fname, int index) {$/;"	f
qos	mmt.h	/^	int32_t qos ;$/;"	m	struct:MMT_config
randomize_array	mmt.cc	/^randomize_array (UINT32		**array,$/;"	f
readAssetConf	server.cc	/^int readAssetConf(asset_info_t **asset_info, char *configFile)$/;"	f
readPIConf	server.cc	/^int readPIConf(PI_info_t **PI_info,char *configFile)$/;"	f
read_config	server.cc	/^void  read_config(mmt_config_t *m_config, char * MMTConfigFile)$/;"	f
read_fec_message	mmt.cc	/^int read_fec_message(fec_message_t *fec_message, const char *fec_message_buf)$/;"	f
read_mfu_non_time_header	mmt.cc	/^int read_mfu_non_time_header(mfu_non_time_packet_header_t *mfu_non_time_header,const char *MFUh_nt)$/;"	f
read_mfu_sample	mmt.cc	/^int read_mfu_sample(mfu_sample_t *mfu_sample,const char *mfu_sample_buf)$/;"	f
read_mfu_time_header	mmt.cc	/^int read_mfu_time_header(mfu_time_packet_header_t *mfu_time_header,const char *MFUh_t)$/;"	f
read_mmtp_header	mmt.cc	/^int read_mmtp_header(mmt_packet_header_t *mmt_header, const char *MMTPh)$/;"	f
read_mp_table	mmt.cc	/^int read_mp_table(mp_table_t *mp_table ,const char *mp_table_buf)$/;"	f
read_mpi_table	mmt.cc	/^int read_mpi_table(mpi_table_t *mpi_table, const char *mpi_table_buf)$/;"	f
read_mpu_header	mmt.cc	/^int read_mpu_header(mpu_packet_header_t *mpu_header,const char *MPUh)$/;"	f
read_pa_message	mmt.cc	/^int read_pa_message(pa_message_t *pa_message,const char *pa_message_buf)$/;"	f
read_pa_message_header	mmt.cc	/^int read_pa_message_header(pa_message_t *pa_message,const char *pa_message_buf)$/;"	f
read_pa_table	mmt.cc	/^int read_pa_table(pa_table_t *pa_table ,const char *PA_table_buf)$/;"	f
read_signal_header	mmt.cc	/^int read_signal_header(signal_header_t *signal_header,const char *Signal_h)$/;"	f
read_signalingConf	server.cc	/^int read_signalingConf(asset_info_t **asset_info, PI_info_t **PI_info, char *configFile)$/;"	f
read_smt_header	mmt.cc	/^int read_smt_header(smt_packet_header_t *smt_header,const char *SMTh)$/;"	f
read_table_header	mmt.cc	/^int read_table_header(table_header_t *table_header ,const char *table_buf)$/;"	f
repair_flow_id	mmt.h	/^	u_int8_t repair_flow_id;$/;"	m	struct:fec_coding_structure01_s
repair_symbol_length	mmt.h	/^	u_int16_t repair_symbol_length;$/;"	m	struct:fec_flow_s
res	mmt.h	/^	u_int8_t res:4;$/;"	m	struct:signal_header_s
res	mmtp.h	/^    int  res;           \/\/> @refer mmtp_res_t$/;"	m	struct:mmtp_rinfo_t
res_map_file	mmt.h	/^	char *res_map_file;$/;"	m	struct:MMT_config
reserved	mmt.h	/^	u_int8_t reserved:2;$/;"	m	struct:fec_flow_s
reserved	mmt.h	/^	u_int8_t reserved:6;$/;"	m	struct:fec_message_s
reserved	mmt.h	/^	u_int8_t reserved:6;$/;"	m	struct:mp_table_s
reserved	mmt.h	/^	u_int8_t reserved:7;$/;"	m	struct:MP_table_asset_s
reserved1	mmt.h	/^	u_int8_t reserved1:4;$/;"	m	struct:mpi_table_s
reserved2	mmt.h	/^	u_int8_t reserved2:2;$/;"	m	struct:mpi_table_s
reserved_1	mmt.h	/^    u_int8_t reserved_1:1;$/;"	m	struct:MMT_packet_header_s
reserved_2	mmt.h	/^    u_int8_t reserved_2:2;$/;"	m	struct:MMT_packet_header_s
ringq	ringq.h	/^typedef struct ringq{$/;"	s
ringq_free	ringq.cc	/^int ringq_free(RINGQ * p_queue)$/;"	f
ringq_init	ringq.cc	/^int ringq_init(RINGQ * p_queue)$/;"	f
ringq_is_empty	ringq.h	39;"	d
ringq_is_full	ringq.h	41;"	d
ringq_poll	ringq.cc	/^int ringq_poll(RINGQ * p_queue,int * p_data)$/;"	f
ringq_push	ringq.cc	/^int ringq_push(RINGQ * p_queue,int data)$/;"	f
s	server.cc	/^static int s;$/;"	v	file:
sample_number	mmt.h	/^	u_int32_t sample_number;$/;"	m	struct:MFU_time_packet_header_s
sample_number	mmt.h	/^u_int32_t sample_number;$/;"	m	struct:mfu_sample_s
send_mpu	mmt.cc	/^int send_mpu(int ss,struct sockaddr*to,char *Fullpath,u_int32_t *packet_sequence_number,u_int32_t *packet_counter,u_int32_t MPU_sequence_number,u_int32_t *MPU_present_time,u_int32_t packet_id)$/;"	f
send_mpu_endpacket	mmt.cc	/^int send_mpu_endpacket(int ss,struct sockaddr*to,char *Fullpath,u_int32_t *packet_sequence_number,u_int32_t *packet_counter,u_int32_t MPU_sequence_number,u_int32_t *MPU_present_time,u_int32_t packet_id)$/;"	f
send_nontimed_mpu	mmt.cc	/^int send_nontimed_mpu(int ss,struct sockaddr*to,char *Fullpath,u_int32_t *packet_sequence_number,u_int32_t *packet_counter,u_int32_t MPU_sequence_number,u_int32_t *MPU_present_time,u_int32_t packet_id)$/;"	f
send_raw_udp	send.cc	/^int send_raw_udp(char *UDPbuff,int length)$/;"	f
send_signal	mmt.cc	/^int send_signal(int ss,struct sockaddr*to,pa_message_t *pa_header,unsigned char *pa_message_buf,u_int32_t *packet_sequence_number,u_int32_t *packet_counter,u_int32_t packet_id)$/;"	f
send_udp	mmt.cc	/^int send_udp(int ss,char *UDPbuff,int length,struct sockaddr*to)$/;"	f
sequence_number	mmt.h	/^u_int32_t sequence_number;$/;"	m	struct:mfu_sample_s
serialize_fec_message	mmt.cc	/^int serialize_fec_message(fec_message_t *fec_message, unsigned char *fec_message_buf)$/;"	f
session_num	mmt.h	/^	int32_t session_num;$/;"	m	struct:MMT_config
set_asset_list	client.cc	/^void set_asset_list(){$/;"	f
set_mmtp_assets	mmtp.cc	/^void set_mmtp_assets(const char ids[][MAX_PATH], const char clips[][MAX_PATH], int num) {$/;"	f
set_mmtp_callback	mmtp.cc	/^void set_mmtp_callback(mmtp_callback_t cb) {$/;"	f
sig_pipe	client.cc	/^void  sig_pipe(int signo)$/;"	f
sig_pipe	server.cc	/^void  sig_pipe(int signo)$/;"	f
sig_proccess	client.cc	/^void sig_proccess(int signo)$/;"	f
sig_proccess	server.cc	/^void sig_proccess(int signo)$/;"	f
signal_BUFF_LEN	mmt.h	34;"	d
signal_buf_s	mmt.h	/^typedef struct signal_buf_s \/\/4Byte$/;"	s
signal_buf_t	mmt.h	/^}signal_buf_t,*psignal_buf_t;$/;"	t	typeref:struct:signal_buf_s
signal_buff_list	client.cc	/^DList *signal_buff_list = NULL;$/;"	v
signal_buffer_has_item	client.cc	/^int signal_buffer_has_item=0;							\/*缓冲区计数值*\/$/;"	v
signal_consumer_f	client.cc	/^void *signal_consumer_f(void *arg)						\/*消费者线程程序*\/$/;"	f
signal_header_s	mmt.h	/^typedef struct signal_header_s \/\/4Byte$/;"	s
signal_header_t	mmt.h	/^}signal_header_t;$/;"	t	typeref:struct:signal_header_s
signal_mutex	client.cc	/^pthread_mutex_t signal_mutex;							\/*互斥区*\/$/;"	v
signalh_BUFF_LEN	mmt.h	33;"	d
size	DList.h	/^	volatile int size;$/;"	m	struct:__anon4
size	Mlist.h	/^	int size;$/;"	m	struct:__anon2
size	ringq.h	/^    int size ; \/* 队列总尺寸 *\/$/;"	m	struct:ringq
smt_packet_header_t	mmt.h	/^}smt_packet_header_t;$/;"	t	typeref:struct:SMT_packet_header_s
sort	getfile.cc	/^void sort(char **fileNameList, int count) \/*排序函数*\/$/;"	f
source_address	send.h	/^    u_int32_t source_address;$/;"	m	struct:pseudo_header
source_flow_id	mmt.h	/^	u_int8_t source_flow_id;$/;"	m	struct:fec_flow_s
space	ringq.h	/^   int space[QUEUE_MAX]; \/* 队列空间 *\/$/;"	m	struct:ringq
ss	mmt.h	/^	int ss;$/;"	m	struct:mmt_socket_s
ssbg_mode	mmt.h	/^	u_int8_t ssbg_mode:2;$/;"	m	struct:fec_cfg_s
ssbg_mode	mmt.h	/^	u_int8_t ssbg_mode:2;$/;"	m	struct:fec_flow_s
ssbg_mode10	mmt.h	/^	ssbg_mode10_t * ssbg_mode10;$/;"	m	struct:fec_flow_s
ssbg_mode10_s	mmt.h	/^typedef struct ssbg_mode10_s$/;"	s
ssbg_mode10_t	mmt.h	/^}ssbg_mode10_t;$/;"	t	typeref:struct:ssbg_mode10_s
sstrncpy	ini.cc	/^static char *sstrncpy(char *dest, const char *src, size_t n)$/;"	f	file:
start	mmt.h	/^	 u_int32_t start;$/;"	m	struct:MPU_metadata_s
start	mmt.h	/^    u_int32_t start;$/;"	m	struct:Fragment_metadata_s
start	mmt.h	/^    u_int32_t start;$/;"	m	struct:MFU_s
start_mmtp	mmtp.cc	/^void start_mmtp(const char* mcast_ip, int mcast_port) {$/;"	f
start_sock	client.cc	/^void start_sock(char *addr, u_int16_t port,mmt_socket_t * mmt_socket){$/;"	f
state	mmt.h	/^	int state;$/;"	m	struct:mpu_buf_s
stop_mmtp	mmtp.cc	/^void stop_mmtp() {$/;"	f
stop_sock_chrome	client.cc	/^void stop_sock_chrome(){$/;"	f
strcatex	getfile.cc	/^char* strcatex(char* str1, char* str2)$/;"	f
subsample_priority	mmt.h	/^	u_int8_t subsample_priority;$/;"	m	struct:MFU_time_packet_header_s
sz	ringq.h	/^    size_t sz;        \/\/ size of each item in the buffer$/;"	m	struct:circular_buffer
table_header	mmt.h	/^	table_header_t *table_header;$/;"	m	struct:pa_message_s
table_header_LEN	mmt.h	81;"	d
table_header_s	mmt.h	/^typedef struct table_header_s \/\/4Byte$/;"	s
table_header_t	mmt.h	/^}table_header_t;$/;"	t	typeref:struct:table_header_s
table_id	mmt.h	/^	u_int8_t table_id;$/;"	m	struct:mp_table_s
table_id	mmt.h	/^	u_int8_t table_id;$/;"	m	struct:mpi_table_s
table_id	mmt.h	/^	u_int8_t table_id;$/;"	m	struct:pa_table_s
table_id	mmt.h	/^	u_int8_t table_id;$/;"	m	struct:table_header_s
tag	ringq.h	/^   int tag ; \/* 为空还是为满的标志位*\/$/;"	m	struct:ringq
tail	DList.h	/^	PNode tail;		\/*指向尾节点*\/$/;"	m	struct:__anon4
tail	Mlist.h	/^	mPNode tail;		\/*指向尾节点*\/$/;"	m	struct:__anon2
tail	ringq.h	/^    void *tail;       \/\/ pointer to tail$/;"	m	struct:circular_buffer
tail	ringq.h	/^   int tail; \/* 尾部，入队列方向*\/ $/;"	m	struct:ringq
th_BUFF_LEN	mmt.h	78;"	d
time_delay	mmt.h	/^	int32_t time_delay;$/;"	m	struct:MMT_config
timed_Flag	mmt.h	/^	u_int8_t timed_Flag:1;$/;"	m	struct:MPU_packet_header_s
timestamp	mmt.h	/^    u_int32_t timestamp;$/;"	m	struct:MMT_packet_header_s
to_addr	mmt.h	/^	char *to_addr;$/;"	m	struct:MMT_config
to_port	mmt.h	/^	int16_t to_port;$/;"	m	struct:MMT_config
trackrefindex	mmt.h	/^u_int8_t trackrefindex;$/;"	m	struct:mfu_sample_s
type	mmt.h	/^	u_int16_t type;$/;"	m	struct:MMT_packet_header_extension_header_s
type	mmt.h	/^    u_int8_t type:6;$/;"	m	struct:MMT_packet_header_s
udp_length	send.h	/^    u_int16_t udp_length;$/;"	m	struct:pseudo_header
udp_send	server.cc	/^int udp_send(int ss, struct sockaddr *to, mmt_config_t *m_config, asset_info_t * asset_info, PI_info_t *PI_info)$/;"	f
uninit_mmtp	mmtp.cc	/^void uninit_mmtp() {$/;"	f
url	mmtp.h	/^    char url[512];      \/\/> asset url$/;"	m	struct:mmtp_rinfo_t
value	ini.h	/^    char  *value;$/;"	m	struct:ini_arg
version	mmt.h	/^	u_int8_t version;$/;"	m	struct:fec_message_s
version	mmt.h	/^	u_int8_t version;$/;"	m	struct:mp_table_s
version	mmt.h	/^	u_int8_t version;$/;"	m	struct:mpi_table_s
version	mmt.h	/^	u_int8_t version;$/;"	m	struct:pa_message_s
version	mmt.h	/^	u_int8_t version;$/;"	m	struct:pa_table_s
version	mmt.h	/^	u_int8_t version;$/;"	m	struct:table_header_s
version	mmt.h	/^    u_int8_t version:2;$/;"	m	struct:MMT_packet_header_s
